{"title":"Movie Rating Predictor System Using KNN and Collaborative Filtering","markdown":{"yaml":{"title":"Movie Rating Predictor System Using KNN and Collaborative Filtering","format":"html","editor":"visual","image":"img1.png"},"headingText":"[\\[PROJECT LINK\\]](https://github.com/Ajith008/Movie-Rating-Predictor-System-Using-KNN-and-Collaborative-Filtering)","containsRefs":false,"markdown":"\n\n\n**Project Description:**\n\nThis project focuses on developing a movie recommendation system using two popular machine learning techniques: k-Nearest Neighbors (KNN) and Collaborative Filtering (CF). The MovieLens dataset, containing 100,000 ratings for approximately 9,000 movies, was used as the basis for building and evaluating the models. The primary objective was to accurately predict user ratings for movies by analyzing historical data and user preferences.\n\n**Objective:**\n\nTo build a robust recommender system that can predict movie ratings by leveraging user-item interaction data and evaluating the performance of two distinct algorithms.\n\n**Techniques Used:**\n\n1.  **k-Nearest Neighbors (KNN)**\n\n    -   Supervised learning algorithm widely used in classification and regression tasks.\n\n    -   Non-parametric, meaning it makes no assumptions about the data distribution.\n\n    -   Various values of k (e.g., k=3, 5, 10) and prediction methods (weighted vs. unweighted average) were explored.\n\n2.  **Collaborative Filtering (CF)**\n\n    -   One of the core methods in recommender systems, focused on learning user-item interaction patterns.\n\n    -   CF was applied using different training/testing splits to assess its performance.\n\n    -   The method demonstrated high accuracy, especially when sufficient training data was available.\n\n**Dataset:**\n\nThe MovieLens dataset, containing 100,000 user ratings for 9,000 movies, was utilized. The dataset presented a challenge due to sparsity, where many users had only rated a limited number of movies.\n\n**Evaluation Metrics:**\n\n-   **Root Mean Squared Error (RMSE):** Used to measure the accuracy of the predicted ratings.\n\n-   **Runtime:** Wall-clock time was recorded to compare the computational efficiency of both methods.\n\n**Key Findings:**\n\n1.  **k-Nearest Neighbors (KNN)**\n\n    -   Higher values of k generally resulted in better accuracy (lower RMSE) and slightly improved runtime.\n\n    -   Optimal configuration: k = 10 with an unweighted average prediction, achieving an RMSE of 1.04.\n\n2.  **Collaborative Filtering (CF)**\n\n    -   Achieved better accuracy than KNN, with the lowest RMSE of 0.9879 using a 90%-10% training/testing split.\n\n    -   Performance decreased with smaller training sets, emphasizing the need for sufficient data.\n\n**Comparison of Methods:**\n\n-   **Accuracy:** CF outperformed KNN, achieving the lowest RMSE.\n\n-   **Runtime:** CF had a shorter runtime compared to KNN for larger values of k, making it more efficient for large datasets.\n\n**Conclusion:** This project successfully demonstrated the development of a movie recommendation system using two distinct algorithms: k-Nearest Neighbors and Collaborative Filtering. While both methods performed well, CF proved to be the superior method in terms of both accuracy and efficiency for the given dataset.\n\n**Key Insights:**\n\n-   KNN is effective for smaller datasets and local associations but struggles with larger, sparser datasets.\n\n-   Collaborative Filtering excels at capturing latent patterns in user-item interactions but requires a large amount of data for optimal performance.\n\n**Future Work:**\n\n-   Implementing hybrid models combining CF and content-based filtering.\n\n-   Exploring deep learning-based recommender systems, such as matrix factorization and neural collaborative filtering.\n\n-   Optimizing runtime further by parallelizing computations and leveraging GPU-based processing.\n","srcMarkdownNoYaml":"\n\n### [\\[PROJECT LINK\\]](https://github.com/Ajith008/Movie-Rating-Predictor-System-Using-KNN-and-Collaborative-Filtering)\n\n**Project Description:**\n\nThis project focuses on developing a movie recommendation system using two popular machine learning techniques: k-Nearest Neighbors (KNN) and Collaborative Filtering (CF). The MovieLens dataset, containing 100,000 ratings for approximately 9,000 movies, was used as the basis for building and evaluating the models. The primary objective was to accurately predict user ratings for movies by analyzing historical data and user preferences.\n\n**Objective:**\n\nTo build a robust recommender system that can predict movie ratings by leveraging user-item interaction data and evaluating the performance of two distinct algorithms.\n\n**Techniques Used:**\n\n1.  **k-Nearest Neighbors (KNN)**\n\n    -   Supervised learning algorithm widely used in classification and regression tasks.\n\n    -   Non-parametric, meaning it makes no assumptions about the data distribution.\n\n    -   Various values of k (e.g., k=3, 5, 10) and prediction methods (weighted vs. unweighted average) were explored.\n\n2.  **Collaborative Filtering (CF)**\n\n    -   One of the core methods in recommender systems, focused on learning user-item interaction patterns.\n\n    -   CF was applied using different training/testing splits to assess its performance.\n\n    -   The method demonstrated high accuracy, especially when sufficient training data was available.\n\n**Dataset:**\n\nThe MovieLens dataset, containing 100,000 user ratings for 9,000 movies, was utilized. The dataset presented a challenge due to sparsity, where many users had only rated a limited number of movies.\n\n**Evaluation Metrics:**\n\n-   **Root Mean Squared Error (RMSE):** Used to measure the accuracy of the predicted ratings.\n\n-   **Runtime:** Wall-clock time was recorded to compare the computational efficiency of both methods.\n\n**Key Findings:**\n\n1.  **k-Nearest Neighbors (KNN)**\n\n    -   Higher values of k generally resulted in better accuracy (lower RMSE) and slightly improved runtime.\n\n    -   Optimal configuration: k = 10 with an unweighted average prediction, achieving an RMSE of 1.04.\n\n2.  **Collaborative Filtering (CF)**\n\n    -   Achieved better accuracy than KNN, with the lowest RMSE of 0.9879 using a 90%-10% training/testing split.\n\n    -   Performance decreased with smaller training sets, emphasizing the need for sufficient data.\n\n**Comparison of Methods:**\n\n-   **Accuracy:** CF outperformed KNN, achieving the lowest RMSE.\n\n-   **Runtime:** CF had a shorter runtime compared to KNN for larger values of k, making it more efficient for large datasets.\n\n**Conclusion:** This project successfully demonstrated the development of a movie recommendation system using two distinct algorithms: k-Nearest Neighbors and Collaborative Filtering. While both methods performed well, CF proved to be the superior method in terms of both accuracy and efficiency for the given dataset.\n\n**Key Insights:**\n\n-   KNN is effective for smaller datasets and local associations but struggles with larger, sparser datasets.\n\n-   Collaborative Filtering excels at capturing latent patterns in user-item interactions but requires a large amount of data for optimal performance.\n\n**Future Work:**\n\n-   Implementing hybrid models combining CF and content-based filtering.\n\n-   Exploring deep learning-based recommender systems, such as matrix factorization and neural collaborative filtering.\n\n-   Optimizing runtime further by parallelizing computations and leveraging GPU-based processing.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"project1.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","editor":"visual","theme":"materia","title":"Movie Rating Predictor System Using KNN and Collaborative Filtering","image":"img1.png"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}